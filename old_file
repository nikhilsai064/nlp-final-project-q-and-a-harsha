{
  "metadata": {
    "kernelspec": {
      "language": "python",
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python",
      "version": "3.7.10",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "colab": {
      "provenance": [],
      "machine_shape": "hm"
    },
    "accelerator": "GPU",
    "gpuClass": "premium"
  },
  "nbformat_minor": 0,
  "nbformat": 4,
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "!pip install transformers==4.28.0"
      ],
      "metadata": {
        "id": "3Nhk4e4VTUuw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install datasets"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_jEKqjPBMIy-",
        "outputId": "17103bdf-b649-425b-d729-42e1f19967ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: datasets in /usr/local/lib/python3.10/dist-packages (2.12.0)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from datasets) (1.22.4)\n",
            "Requirement already satisfied: pyarrow>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (9.0.0)\n",
            "Requirement already satisfied: dill<0.3.7,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.3.6)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (1.5.3)\n",
            "Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (2.27.1)\n",
            "Requirement already satisfied: tqdm>=4.62.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (4.65.0)\n",
            "Requirement already satisfied: xxhash in /usr/local/lib/python3.10/dist-packages (from datasets) (3.2.0)\n",
            "Requirement already satisfied: multiprocess in /usr/local/lib/python3.10/dist-packages (from datasets) (0.70.14)\n",
            "Requirement already satisfied: fsspec[http]>=2021.11.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (2023.4.0)\n",
            "Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.8.4)\n",
            "Requirement already satisfied: huggingface-hub<1.0.0,>=0.11.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.14.1)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from datasets) (23.1)\n",
            "Requirement already satisfied: responses<0.19 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.18.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (6.0)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (23.1.0)\n",
            "Requirement already satisfied: charset-normalizer<4.0,>=2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (2.0.12)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (6.0.4)\n",
            "Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (4.0.2)\n",
            "Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.9.2)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.3)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.1)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0.0,>=0.11.0->datasets) (3.12.0)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0.0,>=0.11.0->datasets) (4.5.0)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->datasets) (1.26.15)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->datasets) (2022.12.7)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->datasets) (3.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2022.7.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas->datasets) (1.16.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!ls ../input/chaii-hindi-and-tamil-question-answering"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:34:47.991838Z",
          "iopub.execute_input": "2021-11-13T20:34:47.992118Z",
          "iopub.status.idle": "2021-11-13T20:34:48.755905Z",
          "shell.execute_reply.started": "2021-11-13T20:34:47.992084Z",
          "shell.execute_reply": "2021-11-13T20:34:48.755089Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZQsW2svhtHHe",
        "outputId": "b69f4839-d6d0-44be-96f2-6092d7a1509e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ls: cannot access '../input/chaii-hindi-and-tamil-question-answering': No such file or directory\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip uninstall haystack\n",
        "\n",
        "!pip install django-haystack"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZGXkz27bt4_V",
        "outputId": "6109b0d2-53ed-4975-e630-55a9e4b6c806"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[33mWARNING: Skipping haystack as it is not installed.\u001b[0m\u001b[33m\n",
            "\u001b[0mLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: django-haystack in /usr/local/lib/python3.10/dist-packages (3.2.1)\n",
            "Requirement already satisfied: Django>=2.2 in /usr/local/lib/python3.10/dist-packages (from django-haystack) (4.2.1)\n",
            "Requirement already satisfied: asgiref<4,>=3.6.0 in /usr/local/lib/python3.10/dist-packages (from Django>=2.2->django-haystack) (3.6.0)\n",
            "Requirement already satisfied: sqlparse>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from Django>=2.2->django-haystack) (0.4.4)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!pip install datasets"
      ],
      "metadata": {
        "id": "86KlzEhxAJeW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import transformers\n",
        "from datasets import Dataset\n",
        "from transformers import AutoTokenizer, AutoModelForQuestionAnswering\n",
        "import torch\n",
        "from torch.utils.data import DataLoader\n",
        "from transformers import AdamW\n",
        "import numpy as np\n",
        "from transformers import TrainingArguments, Trainer\n",
        "from transformers import default_data_collator\n",
        "import collections\n",
        "import random\n",
        "import csv\n",
        "random_seed = 42\n",
        "\n",
        "torch.manual_seed(random_seed)\n",
        "torch.cuda.manual_seed(random_seed)\n",
        "np.random.seed(random_seed)\n",
        "random.seed(random_seed)\n",
        "torch.backends.cudnn.deterministic = True\n",
        "\n",
        "device = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')\n",
        "%env WANDB_DISABLED=True"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:34:48.758107Z",
          "iopub.execute_input": "2021-11-13T20:34:48.758394Z",
          "iopub.status.idle": "2021-11-13T20:34:48.769746Z",
          "shell.execute_reply.started": "2021-11-13T20:34:48.758357Z",
          "shell.execute_reply": "2021-11-13T20:34:48.769045Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8NkS-qjHtHHi",
        "outputId": "c3ccce6c-4250-4c56-da6e-1466eaf2ba0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "env: WANDB_DISABLED=True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Loading the pretrained model"
      ],
      "metadata": {
        "id": "tIiPJE6bL1FX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model_name = \"deepset/xlm-roberta-base-squad2\""
      ],
      "metadata": {
        "id": "OT_sCEdx0qN0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install farm-haystack"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "T537J7PsCLEY",
        "outputId": "19d8b586-c112-4c22-d379-f1d3dcb08941"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: farm-haystack in /usr/local/lib/python3.10/dist-packages (1.17.0rc0)\n",
            "Requirement already satisfied: azure-ai-formrecognizer>=3.2.0b2 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (3.3.0b1)\n",
            "Requirement already satisfied: boilerpy3 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (1.0.6)\n",
            "Requirement already satisfied: canals==0.1.2 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.1.2)\n",
            "Requirement already satisfied: dill in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.3.6)\n",
            "Requirement already satisfied: events in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.4)\n",
            "Requirement already satisfied: generalimport in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.3.1)\n",
            "Requirement already satisfied: huggingface-hub>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.14.1)\n",
            "Requirement already satisfied: jsonschema in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (4.3.3)\n",
            "Requirement already satisfied: mmh3 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (3.1.0)\n",
            "Requirement already satisfied: more-itertools in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (9.1.0)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (3.1)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (1.5.3)\n",
            "Requirement already satisfied: posthog in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (3.0.1)\n",
            "Requirement already satisfied: protobuf<=3.20.2 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (3.20.2)\n",
            "Requirement already satisfied: pydantic in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (1.10.7)\n",
            "Requirement already satisfied: quantulum3 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.9.0)\n",
            "Requirement already satisfied: rank-bm25 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.2.2)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (2.27.1)\n",
            "Requirement already satisfied: scikit-learn>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (1.2.2)\n",
            "Requirement already satisfied: sentence-transformers>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (2.2.2)\n",
            "Requirement already satisfied: sseclient-py in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (1.7.2)\n",
            "Requirement already satisfied: tenacity in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (8.2.2)\n",
            "Requirement already satisfied: tiktoken>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (0.4.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from farm-haystack) (4.65.0)\n",
            "Collecting transformers[torch]==4.28.1 (from farm-haystack)\n",
            "  Using cached transformers-4.28.1-py3-none-any.whl (7.0 MB)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack) (3.12.0)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack) (1.22.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack) (23.1)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack) (6.0)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack) (2022.10.31)\n",
            "Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack) (0.13.3)\n",
            "Requirement already satisfied: torch!=1.12.0,>=1.9 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack) (2.0.0+cu118)\n",
            "Requirement already satisfied: azure-core<2.0.0,>=1.23.0 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack) (1.26.4)\n",
            "Requirement already satisfied: msrest>=0.6.21 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack) (0.7.1)\n",
            "Requirement already satisfied: azure-common~=1.1 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack) (1.1.28)\n",
            "Requirement already satisfied: typing-extensions>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack) (4.5.0)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.5.0->farm-haystack) (2023.4.0)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=1.0.0->farm-haystack) (1.10.1)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=1.0.0->farm-haystack) (1.2.0)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=1.0.0->farm-haystack) (3.1.0)\n",
            "Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=2.2.0->farm-haystack) (0.15.1+cu118)\n",
            "Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=2.2.0->farm-haystack) (3.8.1)\n",
            "Requirement already satisfied: sentencepiece in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=2.2.0->farm-haystack) (0.1.99)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack) (1.26.15)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack) (2022.12.7)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack) (2.0.12)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack) (3.4)\n",
            "Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema->farm-haystack) (23.1.0)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema->farm-haystack) (0.19.3)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->farm-haystack) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->farm-haystack) (2022.7.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from posthog->farm-haystack) (1.16.0)\n",
            "Requirement already satisfied: monotonic>=1.5 in /usr/local/lib/python3.10/dist-packages (from posthog->farm-haystack) (1.6)\n",
            "Requirement already satisfied: backoff>=1.10.0 in /usr/local/lib/python3.10/dist-packages (from posthog->farm-haystack) (2.2.1)\n",
            "Requirement already satisfied: inflect in /usr/local/lib/python3.10/dist-packages (from quantulum3->farm-haystack) (6.0.4)\n",
            "Requirement already satisfied: num2words in /usr/local/lib/python3.10/dist-packages (from quantulum3->farm-haystack) (0.5.12)\n",
            "Requirement already satisfied: isodate>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from msrest>=0.6.21->azure-ai-formrecognizer>=3.2.0b2->farm-haystack) (0.6.1)\n",
            "Requirement already satisfied: requests-oauthlib>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from msrest>=0.6.21->azure-ai-formrecognizer>=3.2.0b2->farm-haystack) (1.3.1)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack) (1.11.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack) (3.1.2)\n",
            "Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack) (2.0.0)\n",
            "Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack) (3.25.2)\n",
            "Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack) (16.0.3)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk->sentence-transformers>=2.2.0->farm-haystack) (8.1.3)\n",
            "Requirement already satisfied: docopt>=0.6.2 in /usr/local/lib/python3.10/dist-packages (from num2words->quantulum3->farm-haystack) (0.6.2)\n",
            "Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision->sentence-transformers>=2.2.0->farm-haystack) (8.4.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.5.0->msrest>=0.6.21->azure-ai-formrecognizer>=3.2.0b2->farm-haystack) (3.2.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack) (2.1.2)\n",
            "Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack) (1.3.0)\n",
            "Installing collected packages: transformers\n",
            "  Attempting uninstall: transformers\n",
            "    Found existing installation: transformers 4.28.0\n",
            "    Uninstalling transformers-4.28.0:\n",
            "      Successfully uninstalled transformers-4.28.0\n",
            "Successfully installed transformers-4.28.1\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "transformers"
                ]
              }
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install git+https://github.com/deepset-ai/haystack.git"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TSMSt7khCX2A",
        "outputId": "c867f9bb-27d3-4369-8117-cbf41e7909fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting git+https://github.com/deepset-ai/haystack.git\n",
            "  Cloning https://github.com/deepset-ai/haystack.git to /tmp/pip-req-build-3uea5qd9\n",
            "  Running command git clone --filter=blob:none --quiet https://github.com/deepset-ai/haystack.git /tmp/pip-req-build-3uea5qd9\n",
            "  Resolved https://github.com/deepset-ai/haystack.git to commit 3a6db6840808d3b6f8577db454b1e7cfe7f063c9\n",
            "  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: azure-ai-formrecognizer>=3.2.0b2 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (3.3.0b1)\n",
            "Requirement already satisfied: boilerpy3 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (1.0.6)\n",
            "Requirement already satisfied: canals==0.1.2 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.1.2)\n",
            "Requirement already satisfied: dill in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.3.6)\n",
            "Requirement already satisfied: events in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.4)\n",
            "Requirement already satisfied: generalimport in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.3.1)\n",
            "Requirement already satisfied: huggingface-hub>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.14.1)\n",
            "Requirement already satisfied: jsonschema in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (4.3.3)\n",
            "Requirement already satisfied: mmh3 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (3.1.0)\n",
            "Requirement already satisfied: more-itertools in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (9.1.0)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (3.1)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (1.5.3)\n",
            "Requirement already satisfied: posthog in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (3.0.1)\n",
            "Requirement already satisfied: protobuf<=3.20.2 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (3.20.2)\n",
            "Requirement already satisfied: pydantic in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (1.10.7)\n",
            "Requirement already satisfied: quantulum3 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.9.0)\n",
            "Requirement already satisfied: rank-bm25 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.2.2)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (2.27.1)\n",
            "Requirement already satisfied: scikit-learn>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (1.2.2)\n",
            "Requirement already satisfied: sentence-transformers>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (2.2.2)\n",
            "Requirement already satisfied: sseclient-py in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (1.7.2)\n",
            "Requirement already satisfied: tenacity in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (8.2.2)\n",
            "Requirement already satisfied: tiktoken>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (0.4.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (4.65.0)\n",
            "Requirement already satisfied: transformers[torch]==4.28.1 in /usr/local/lib/python3.10/dist-packages (from farm-haystack==1.17.0rc0) (4.28.1)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (3.12.0)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (1.22.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (23.1)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (6.0)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (2022.10.31)\n",
            "Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (0.13.3)\n",
            "Requirement already satisfied: torch!=1.12.0,>=1.9 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (2.0.0+cu118)\n",
            "Requirement already satisfied: azure-core<2.0.0,>=1.23.0 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack==1.17.0rc0) (1.26.4)\n",
            "Requirement already satisfied: msrest>=0.6.21 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack==1.17.0rc0) (0.7.1)\n",
            "Requirement already satisfied: azure-common~=1.1 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack==1.17.0rc0) (1.1.28)\n",
            "Requirement already satisfied: typing-extensions>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from azure-ai-formrecognizer>=3.2.0b2->farm-haystack==1.17.0rc0) (4.5.0)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.5.0->farm-haystack==1.17.0rc0) (2023.4.0)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=1.0.0->farm-haystack==1.17.0rc0) (1.10.1)\n",
            "Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=1.0.0->farm-haystack==1.17.0rc0) (1.2.0)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=1.0.0->farm-haystack==1.17.0rc0) (3.1.0)\n",
            "Requirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=2.2.0->farm-haystack==1.17.0rc0) (0.15.1+cu118)\n",
            "Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=2.2.0->farm-haystack==1.17.0rc0) (3.8.1)\n",
            "Requirement already satisfied: sentencepiece in /usr/local/lib/python3.10/dist-packages (from sentence-transformers>=2.2.0->farm-haystack==1.17.0rc0) (0.1.99)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack==1.17.0rc0) (1.26.15)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack==1.17.0rc0) (2022.12.7)\n",
            "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack==1.17.0rc0) (2.0.12)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->farm-haystack==1.17.0rc0) (3.4)\n",
            "Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema->farm-haystack==1.17.0rc0) (23.1.0)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema->farm-haystack==1.17.0rc0) (0.19.3)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->farm-haystack==1.17.0rc0) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->farm-haystack==1.17.0rc0) (2022.7.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from posthog->farm-haystack==1.17.0rc0) (1.16.0)\n",
            "Requirement already satisfied: monotonic>=1.5 in /usr/local/lib/python3.10/dist-packages (from posthog->farm-haystack==1.17.0rc0) (1.6)\n",
            "Requirement already satisfied: backoff>=1.10.0 in /usr/local/lib/python3.10/dist-packages (from posthog->farm-haystack==1.17.0rc0) (2.2.1)\n",
            "Requirement already satisfied: inflect in /usr/local/lib/python3.10/dist-packages (from quantulum3->farm-haystack==1.17.0rc0) (6.0.4)\n",
            "Requirement already satisfied: num2words in /usr/local/lib/python3.10/dist-packages (from quantulum3->farm-haystack==1.17.0rc0) (0.5.12)\n",
            "Requirement already satisfied: isodate>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from msrest>=0.6.21->azure-ai-formrecognizer>=3.2.0b2->farm-haystack==1.17.0rc0) (0.6.1)\n",
            "Requirement already satisfied: requests-oauthlib>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from msrest>=0.6.21->azure-ai-formrecognizer>=3.2.0b2->farm-haystack==1.17.0rc0) (1.3.1)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (1.11.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (3.1.2)\n",
            "Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (2.0.0)\n",
            "Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (3.25.2)\n",
            "Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (16.0.3)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk->sentence-transformers>=2.2.0->farm-haystack==1.17.0rc0) (8.1.3)\n",
            "Requirement already satisfied: docopt>=0.6.2 in /usr/local/lib/python3.10/dist-packages (from num2words->quantulum3->farm-haystack==1.17.0rc0) (0.6.2)\n",
            "Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision->sentence-transformers>=2.2.0->farm-haystack==1.17.0rc0) (8.4.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.5.0->msrest>=0.6.21->azure-ai-formrecognizer>=3.2.0b2->farm-haystack==1.17.0rc0) (3.2.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (2.1.2)\n",
            "Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch!=1.12.0,>=1.9->transformers[torch]==4.28.1->farm-haystack==1.17.0rc0) (1.3.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install FARMReader"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QSkdQb_6Essj",
        "outputId": "2eac1d38-b769-41e5-ad90-e9b1d9a37b8c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "\u001b[31mERROR: Could not find a version that satisfies the requirement FARMReader (from versions: none)\u001b[0m\u001b[31m\n",
            "\u001b[0m\u001b[31mERROR: No matching distribution found for FARMReader\u001b[0m\u001b[31m\n",
            "\u001b[0m"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Loading the pretrained model and tokenizer"
      ],
      "metadata": {
        "id": "wGKgEs7-Mpii"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = AutoModelForQuestionAnswering.from_pretrained(model_name)\n",
        "tokenizer = AutoTokenizer.from_pretrained(model_name)"
      ],
      "metadata": {
        "id": "rLRBAs0LxWi3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# model_name = \"deepset/xlm-roberta-base-squad2\"\n",
        "# model_name = '../input/xlm-roberta-squad2/deepset/xlm-roberta-base-squad2'\n",
        "#model_name = '../input/xlm-roberta-squad2/deepset/xlm-roberta-large-squad2'\n",
        "#model = AutoModelForQuestionAnswering.from_pretrained(model_name)\n",
        "#tokenizer = AutoTokenizer.from_pretrained(model_name)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:34:48.771365Z",
          "iopub.execute_input": "2021-11-13T20:34:48.771973Z",
          "iopub.status.idle": "2021-11-13T20:35:18.964005Z",
          "shell.execute_reply.started": "2021-11-13T20:34:48.771934Z",
          "shell.execute_reply": "2021-11-13T20:35:18.963240Z"
        },
        "trusted": true,
        "id": "aZVxBrlytHHj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# helper functions\n",
        "def set_max_len_encd_stride(max_len, encd_stride):\n",
        "    max_len_ = max_len\n",
        "    encd_stride_ = encd_stride\n",
        "    return max_len_, encd_stride_"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:18.644340Z",
          "iopub.execute_input": "2021-11-13T19:55:18.644640Z",
          "iopub.status.idle": "2021-11-13T19:55:18.650244Z",
          "shell.execute_reply.started": "2021-11-13T19:55:18.644603Z",
          "shell.execute_reply": "2021-11-13T19:55:18.649402Z"
        },
        "trusted": true,
        "id": "T_Tp21YbtHHj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Preprocessing of data"
      ],
      "metadata": {
        "id": "Vvh8pmVytHHk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "train_data_chai =  pd.read_csv(\"/content/drive/MyDrive/nlp project/train.csv\", encoding = \"utf-8\")\n",
        "train_data_chai = train_data_chai.sample(frac=1, random_state = random_seed)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:18.652183Z",
          "iopub.execute_input": "2021-11-13T19:55:18.652523Z",
          "iopub.status.idle": "2021-11-13T19:55:19.234963Z",
          "shell.execute_reply.started": "2021-11-13T19:55:18.652473Z",
          "shell.execute_reply": "2021-11-13T19:55:19.234245Z"
        },
        "trusted": true,
        "id": "GoWwJiFitHHl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XTmHUnWV1Rnx",
        "outputId": "462f2062-580d-44db-f4ee-e0980b1d1b20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# train_data_chai['context'] = train_data_chai['context'].apply(lambda x: x.lstrip())\n",
        "train_data_chai['question'] = train_data_chai['question'].apply(lambda x: x.lstrip())"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.237498Z",
          "iopub.execute_input": "2021-11-13T19:55:19.237988Z",
          "iopub.status.idle": "2021-11-13T19:55:19.246741Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.237952Z",
          "shell.execute_reply": "2021-11-13T19:55:19.245985Z"
        },
        "trusted": true,
        "id": "-D6xP9wOtHHm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_data_chai= train_data_chai[:].reset_index(drop=True)\n",
        "\n",
        "valid_data_chai = train_data_chai[-10:].reset_index(drop=True)\n",
        "\n",
        "# train_data_chai= train_data_chai[:-512].reset_index(drop=True)\n",
        "\n",
        "# valid_data_chai = train_data_chai[-512:].reset_index(drop=True)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.249776Z",
          "iopub.execute_input": "2021-11-13T19:55:19.250024Z",
          "iopub.status.idle": "2021-11-13T19:55:19.257003Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.249999Z",
          "shell.execute_reply": "2021-11-13T19:55:19.256183Z"
        },
        "trusted": true,
        "id": "9L40LMa0tHHm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_data_chai.head()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.258269Z",
          "iopub.execute_input": "2021-11-13T19:55:19.258695Z",
          "iopub.status.idle": "2021-11-13T19:55:19.280899Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.258648Z",
          "shell.execute_reply": "2021-11-13T19:55:19.280226Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "id": "kQzGjW1HtHHn",
        "outputId": "2a1ad3fe-27e7-49b8-8fbd-f64a87836d84"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          id                                            context  \\\n",
              "0  cd1339bdd  एरीजोना (English: Arizona) संयुक्त राज्य अमेरि...   \n",
              "1  4c38392a6  ஆத்திரேலியா, ஆஸ்திரேலியா அல்லது அவுஸ்திரேலியா ...   \n",
              "2  0d35dc007  अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...   \n",
              "3  5b2018761  मदर टेरेसा (२६ अगस्त १९१० - ५ सितम्बर १९९७) जि...   \n",
              "4  4f99ce2e0  எம். ஜி. ஆர் என்ற பெயரில் புகழ் பெற்ற, மருதூர்...   \n",
              "\n",
              "                                          question     answer_text  \\\n",
              "0                     एरिज़ोना की राजधानी क्या है?         फ़िनक्स   \n",
              "1             அவுஸ்திரேலியா நாட்டின் தலைநகரம் எது?         கான்பரா   \n",
              "2    अग्नि पंचम(५) मिसाइल की लम्बाई कितने मीटर है?              17   \n",
              "3               मदर टेरेसा की राष्ट्रीयता क्या थी?          भारतीय   \n",
              "4  நடிகர் ம. கோ. இராமச்சந்திரன் எப்போது பிறந்தார்?  சனவரி 17, 1917   \n",
              "\n",
              "   answer_start language  \n",
              "0           123    hindi  \n",
              "1          1472    tamil  \n",
              "2           155    hindi  \n",
              "3           328    hindi  \n",
              "4            99    tamil  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-86114573-0ddb-41ef-ad7b-b170741fb262\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>answer_text</th>\n",
              "      <th>answer_start</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>cd1339bdd</td>\n",
              "      <td>एरीजोना (English: Arizona) संयुक्त राज्य अमेरि...</td>\n",
              "      <td>एरिज़ोना की राजधानी क्या है?</td>\n",
              "      <td>फ़िनक्स</td>\n",
              "      <td>123</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4c38392a6</td>\n",
              "      <td>ஆத்திரேலியா, ஆஸ்திரேலியா அல்லது அவுஸ்திரேலியா ...</td>\n",
              "      <td>அவுஸ்திரேலியா நாட்டின் தலைநகரம் எது?</td>\n",
              "      <td>கான்பரா</td>\n",
              "      <td>1472</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0d35dc007</td>\n",
              "      <td>अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...</td>\n",
              "      <td>अग्नि पंचम(५) मिसाइल की लम्बाई कितने मीटर है?</td>\n",
              "      <td>17</td>\n",
              "      <td>155</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5b2018761</td>\n",
              "      <td>मदर टेरेसा (२६ अगस्त १९१० - ५ सितम्बर १९९७) जि...</td>\n",
              "      <td>मदर टेरेसा की राष्ट्रीयता क्या थी?</td>\n",
              "      <td>भारतीय</td>\n",
              "      <td>328</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4f99ce2e0</td>\n",
              "      <td>எம். ஜி. ஆர் என்ற பெயரில் புகழ் பெற்ற, மருதூர்...</td>\n",
              "      <td>நடிகர் ம. கோ. இராமச்சந்திரன் எப்போது பிறந்தார்?</td>\n",
              "      <td>சனவரி 17, 1917</td>\n",
              "      <td>99</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86114573-0ddb-41ef-ad7b-b170741fb262')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-86114573-0ddb-41ef-ad7b-b170741fb262 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-86114573-0ddb-41ef-ad7b-b170741fb262');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_mldq = pd.read_csv(\"/content/drive/MyDrive/nlp project/mlqa_hindi.csv\", encoding = \"utf-8\")\n",
        "data_xquad = pd.read_csv(\"/content/drive/MyDrive/nlp project/xquad.csv\", encoding = \"utf-8\")"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.281937Z",
          "iopub.execute_input": "2021-11-13T19:55:19.282166Z",
          "iopub.status.idle": "2021-11-13T19:55:19.590592Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.282136Z",
          "shell.execute_reply": "2021-11-13T19:55:19.589825Z"
        },
        "trusted": true,
        "id": "qu0RA9NotHHn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_mldq.head()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.591738Z",
          "iopub.execute_input": "2021-11-13T19:55:19.591977Z",
          "iopub.status.idle": "2021-11-13T19:55:19.602748Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.591945Z",
          "shell.execute_reply": "2021-11-13T19:55:19.602023Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "e43RK_b_tHHn",
        "outputId": "de9f35f0-0df0-4295-f573-9b849ecb8b10"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                             context  \\\n",
              "0  पैरेनकाइमा कोशिकाएं वे जीवित कोशिकाएं हैं जो स...   \n",
              "1  पैरेनकाइमा कोशिकाएं वे जीवित कोशिकाएं हैं जो स...   \n",
              "2  जाइलेम कोशिकाएं कोशिका भित्तियों की लिग्निकृत ...   \n",
              "3  फ्लोएम उच्चतर पौधों में आहार का संवहन करने वाल...   \n",
              "4  सभी हवाई अवयवों की बाह्यत्वचा, जड़ों को छोड़कर...   \n",
              "\n",
              "                                            question  \\\n",
              "0  एक प्रकार की रस्सी का नाम बताईए जो सेलेरी के क...   \n",
              "1  क्या चीज पूरी तरह से पैरेनकाइमा कोशिकाओं से बन...   \n",
              "2       जाइलेम किस प्रकार के पौधों में पाया जाता है?   \n",
              "3                                 लेप्टोम क्या है?\\n   \n",
              "4           बाह्यत्वचा की कोशिकाएं क्या कर सकती हैं?   \n",
              "\n",
              "                            answer_text  answer_start language  \n",
              "0                           कोलेन्काइमा          2267    hindi  \n",
              "1                              पत्तियां           158    hindi  \n",
              "2                        ट्रेकियोफाइटों           292    hindi  \n",
              "3  समान कार्य करने वाला एक अधिक सरल ऊतक           969    hindi  \n",
              "4                    क्यटिन का संश्लेषण           433    hindi  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ceec8e9e-1750-4f8a-9e7c-e5e21ccdd49c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>answer_text</th>\n",
              "      <th>answer_start</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>पैरेनकाइमा कोशिकाएं वे जीवित कोशिकाएं हैं जो स...</td>\n",
              "      <td>एक प्रकार की रस्सी का नाम बताईए जो सेलेरी के क...</td>\n",
              "      <td>कोलेन्काइमा</td>\n",
              "      <td>2267</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>पैरेनकाइमा कोशिकाएं वे जीवित कोशिकाएं हैं जो स...</td>\n",
              "      <td>क्या चीज पूरी तरह से पैरेनकाइमा कोशिकाओं से बन...</td>\n",
              "      <td>पत्तियां</td>\n",
              "      <td>158</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>जाइलेम कोशिकाएं कोशिका भित्तियों की लिग्निकृत ...</td>\n",
              "      <td>जाइलेम किस प्रकार के पौधों में पाया जाता है?</td>\n",
              "      <td>ट्रेकियोफाइटों</td>\n",
              "      <td>292</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>फ्लोएम उच्चतर पौधों में आहार का संवहन करने वाल...</td>\n",
              "      <td>लेप्टोम क्या है?\\n</td>\n",
              "      <td>समान कार्य करने वाला एक अधिक सरल ऊतक</td>\n",
              "      <td>969</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>सभी हवाई अवयवों की बाह्यत्वचा, जड़ों को छोड़कर...</td>\n",
              "      <td>बाह्यत्वचा की कोशिकाएं क्या कर सकती हैं?</td>\n",
              "      <td>क्यटिन का संश्लेषण</td>\n",
              "      <td>433</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ceec8e9e-1750-4f8a-9e7c-e5e21ccdd49c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ceec8e9e-1750-4f8a-9e7c-e5e21ccdd49c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ceec8e9e-1750-4f8a-9e7c-e5e21ccdd49c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# data_mldq['context'] = data_mldq['context'].apply(lambda x: x.lstrip())\n",
        "data_mldq['question'] = data_mldq['question'].apply(lambda x: x.lstrip())\n",
        "data_xquad['question'] = data_xquad['question'].apply(lambda x: x.lstrip())"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.604181Z",
          "iopub.execute_input": "2021-11-13T19:55:19.604708Z",
          "iopub.status.idle": "2021-11-13T19:55:19.615665Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.604670Z",
          "shell.execute_reply": "2021-11-13T19:55:19.615002Z"
        },
        "trusted": true,
        "id": "dKOL2IZrtHHo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# data_xquad.head()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.617105Z",
          "iopub.execute_input": "2021-11-13T19:55:19.617409Z",
          "iopub.status.idle": "2021-11-13T19:55:19.621307Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.617378Z",
          "shell.execute_reply": "2021-11-13T19:55:19.620216Z"
        },
        "trusted": true,
        "id": "vlF-pnZHtHHo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_data = pd.concat([train_data_chai, data_mldq])\n",
        "# train_data = pd.concat([train_data_chai, data_mldq, data_xquad])\n",
        "# train_data = train_data_chai"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.622816Z",
          "iopub.execute_input": "2021-11-13T19:55:19.623379Z",
          "iopub.status.idle": "2021-11-13T19:55:19.633381Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.623287Z",
          "shell.execute_reply": "2021-11-13T19:55:19.632712Z"
        },
        "trusted": true,
        "id": "04AMO_VgtHHo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "valid_data_chai"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.637534Z",
          "iopub.execute_input": "2021-11-13T19:55:19.637856Z",
          "iopub.status.idle": "2021-11-13T19:55:19.651715Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.637822Z",
          "shell.execute_reply": "2021-11-13T19:55:19.650977Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        },
        "id": "iN5mkybxtHHo",
        "outputId": "55887a89-bf0d-4a68-d270-4856f52c6ebb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          id                                            context  \\\n",
              "0  9aaa1672a  गुरु केलुचरण महापात्र (1926-2004) ने ओड़िसीका ...   \n",
              "1  a317a9b97  ஜெ.ஜெ. தாம்சன்(Joseph John Thomson) என்று பொது...   \n",
              "2  435396d8e  अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...   \n",
              "3  f64641ba1  யானை பாலூட்டி வகையைச் சேர்ந்த ஒரு தாவர உண்ணி (...   \n",
              "4  a52d546ba  பூமியில் வாழும் பாலூட்டிகளில் மிக மிக முன்னேற்...   \n",
              "5  3acaa3b86  अरस्तु (384 ईपू – 322 ईपू) यूनानी दार्शनिक थे।...   \n",
              "6  7a3e4bf22  சிந்துவெளி நாகரிகம் (Indus Valley Civilisation...   \n",
              "7  de34ee0a0  Main Page\\n\\nआई एन एस (INS) विक्रमादित्य  (San...   \n",
              "8  518fc3aaf  अमेरिकी क्रन्तिकारी युद्ध (1775–1783), जिसे सं...   \n",
              "9  632812604  संयुक्त राष्ट्र संगठन का मुख्यालय [[[अमेरिका]]...   \n",
              "\n",
              "                                            question  \\\n",
              "0           गुरु केलुचरण महापात्र का जन्म कब हुआ था?   \n",
              "1                அணுவை முதலில் கண்டுபிடித்தவர் யார்?   \n",
              "2  अग्नि पंचम(५) मिसाइल की परिचालन सीमा कितने किल...   \n",
              "3     ஆண் யானை சராசரி எத்தனை மீட்டர் உயரம் இருக்கும்   \n",
              "4    ஆதி மனிதனின் வேட்டையாட பயன்படுத்திய ஆயுதம் எது?   \n",
              "5                        अरस्तु का जन्म कहाँ हुआ था?   \n",
              "6           சிந்து சமவெளி நாகரிகம் எப்போது உருவானது?   \n",
              "7  आई एन एस विक्रमादित्य युद्धपोत किस कंपनी द्वार...   \n",
              "8  कितने अमेरिकी उपनिवेश अमेरिकी क्रांति का हिस्स...   \n",
              "9            संयुक्त राष्ट्र का मुख्यालय कहाँ पर है?   \n",
              "\n",
              "                   answer_text  answer_start language  \n",
              "0                         1926            23    hindi  \n",
              "1       சர் ஜோசப் ஜான் தாம்சன்            65    tamil  \n",
              "2              5 हजार किलोमीटर           261    hindi  \n",
              "3                            3          2284    tamil  \n",
              "4                கற்கருவிகளைப்          2448    tamil  \n",
              "5                   स्टेगेरिया            97    hindi  \n",
              "6                   கி.மு 3000           305    tamil  \n",
              "7  माइकोलैव ब्लैक ‍सी शिपयार्ड           460    hindi  \n",
              "8                         तेरह           147    hindi  \n",
              "9                    न्युयॉर्क            50    hindi  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a924fdc7-d9f1-4779-971f-a76acdcdd09b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>answer_text</th>\n",
              "      <th>answer_start</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>9aaa1672a</td>\n",
              "      <td>गुरु केलुचरण महापात्र (1926-2004) ने ओड़िसीका ...</td>\n",
              "      <td>गुरु केलुचरण महापात्र का जन्म कब हुआ था?</td>\n",
              "      <td>1926</td>\n",
              "      <td>23</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>a317a9b97</td>\n",
              "      <td>ஜெ.ஜெ. தாம்சன்(Joseph John Thomson) என்று பொது...</td>\n",
              "      <td>அணுவை முதலில் கண்டுபிடித்தவர் யார்?</td>\n",
              "      <td>சர் ஜோசப் ஜான் தாம்சன்</td>\n",
              "      <td>65</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>435396d8e</td>\n",
              "      <td>अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...</td>\n",
              "      <td>अग्नि पंचम(५) मिसाइल की परिचालन सीमा कितने किल...</td>\n",
              "      <td>5 हजार किलोमीटर</td>\n",
              "      <td>261</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>f64641ba1</td>\n",
              "      <td>யானை பாலூட்டி வகையைச் சேர்ந்த ஒரு தாவர உண்ணி (...</td>\n",
              "      <td>ஆண் யானை சராசரி எத்தனை மீட்டர் உயரம் இருக்கும்</td>\n",
              "      <td>3</td>\n",
              "      <td>2284</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>a52d546ba</td>\n",
              "      <td>பூமியில் வாழும் பாலூட்டிகளில் மிக மிக முன்னேற்...</td>\n",
              "      <td>ஆதி மனிதனின் வேட்டையாட பயன்படுத்திய ஆயுதம் எது?</td>\n",
              "      <td>கற்கருவிகளைப்</td>\n",
              "      <td>2448</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3acaa3b86</td>\n",
              "      <td>अरस्तु (384 ईपू – 322 ईपू) यूनानी दार्शनिक थे।...</td>\n",
              "      <td>अरस्तु का जन्म कहाँ हुआ था?</td>\n",
              "      <td>स्टेगेरिया</td>\n",
              "      <td>97</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7a3e4bf22</td>\n",
              "      <td>சிந்துவெளி நாகரிகம் (Indus Valley Civilisation...</td>\n",
              "      <td>சிந்து சமவெளி நாகரிகம் எப்போது உருவானது?</td>\n",
              "      <td>கி.மு 3000</td>\n",
              "      <td>305</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>de34ee0a0</td>\n",
              "      <td>Main Page\\n\\nआई एन एस (INS) विक्रमादित्य  (San...</td>\n",
              "      <td>आई एन एस विक्रमादित्य युद्धपोत किस कंपनी द्वार...</td>\n",
              "      <td>माइकोलैव ब्लैक ‍सी शिपयार्ड</td>\n",
              "      <td>460</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>518fc3aaf</td>\n",
              "      <td>अमेरिकी क्रन्तिकारी युद्ध (1775–1783), जिसे सं...</td>\n",
              "      <td>कितने अमेरिकी उपनिवेश अमेरिकी क्रांति का हिस्स...</td>\n",
              "      <td>तेरह</td>\n",
              "      <td>147</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>632812604</td>\n",
              "      <td>संयुक्त राष्ट्र संगठन का मुख्यालय [[[अमेरिका]]...</td>\n",
              "      <td>संयुक्त राष्ट्र का मुख्यालय कहाँ पर है?</td>\n",
              "      <td>न्युयॉर्क</td>\n",
              "      <td>50</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a924fdc7-d9f1-4779-971f-a76acdcdd09b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a924fdc7-d9f1-4779-971f-a76acdcdd09b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a924fdc7-d9f1-4779-971f-a76acdcdd09b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valid_data_chai_tamil = valid_data_chai[valid_data_chai.language == 'tamil']\n",
        "valid_data_chai_tamil"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.652987Z",
          "iopub.execute_input": "2021-11-13T19:55:19.653235Z",
          "iopub.status.idle": "2021-11-13T19:55:19.664333Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.653205Z",
          "shell.execute_reply": "2021-11-13T19:55:19.663589Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "y9681OhbtHHo",
        "outputId": "41713fe8-854e-44ce-9eee-674187c681ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          id                                            context  \\\n",
              "1  a317a9b97  ஜெ.ஜெ. தாம்சன்(Joseph John Thomson) என்று பொது...   \n",
              "3  f64641ba1  யானை பாலூட்டி வகையைச் சேர்ந்த ஒரு தாவர உண்ணி (...   \n",
              "4  a52d546ba  பூமியில் வாழும் பாலூட்டிகளில் மிக மிக முன்னேற்...   \n",
              "6  7a3e4bf22  சிந்துவெளி நாகரிகம் (Indus Valley Civilisation...   \n",
              "\n",
              "                                          question             answer_text  \\\n",
              "1              அணுவை முதலில் கண்டுபிடித்தவர் யார்?  சர் ஜோசப் ஜான் தாம்சன்   \n",
              "3   ஆண் யானை சராசரி எத்தனை மீட்டர் உயரம் இருக்கும்                       3   \n",
              "4  ஆதி மனிதனின் வேட்டையாட பயன்படுத்திய ஆயுதம் எது?           கற்கருவிகளைப்   \n",
              "6         சிந்து சமவெளி நாகரிகம் எப்போது உருவானது?              கி.மு 3000   \n",
              "\n",
              "   answer_start language  \n",
              "1            65    tamil  \n",
              "3          2284    tamil  \n",
              "4          2448    tamil  \n",
              "6           305    tamil  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0889fa24-071d-437a-bd50-13005a708000\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>answer_text</th>\n",
              "      <th>answer_start</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>a317a9b97</td>\n",
              "      <td>ஜெ.ஜெ. தாம்சன்(Joseph John Thomson) என்று பொது...</td>\n",
              "      <td>அணுவை முதலில் கண்டுபிடித்தவர் யார்?</td>\n",
              "      <td>சர் ஜோசப் ஜான் தாம்சன்</td>\n",
              "      <td>65</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>f64641ba1</td>\n",
              "      <td>யானை பாலூட்டி வகையைச் சேர்ந்த ஒரு தாவர உண்ணி (...</td>\n",
              "      <td>ஆண் யானை சராசரி எத்தனை மீட்டர் உயரம் இருக்கும்</td>\n",
              "      <td>3</td>\n",
              "      <td>2284</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>a52d546ba</td>\n",
              "      <td>பூமியில் வாழும் பாலூட்டிகளில் மிக மிக முன்னேற்...</td>\n",
              "      <td>ஆதி மனிதனின் வேட்டையாட பயன்படுத்திய ஆயுதம் எது?</td>\n",
              "      <td>கற்கருவிகளைப்</td>\n",
              "      <td>2448</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7a3e4bf22</td>\n",
              "      <td>சிந்துவெளி நாகரிகம் (Indus Valley Civilisation...</td>\n",
              "      <td>சிந்து சமவெளி நாகரிகம் எப்போது உருவானது?</td>\n",
              "      <td>கி.மு 3000</td>\n",
              "      <td>305</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0889fa24-071d-437a-bd50-13005a708000')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0889fa24-071d-437a-bd50-13005a708000 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0889fa24-071d-437a-bd50-13005a708000');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valid_data_chai_hindi = valid_data_chai[valid_data_chai.language == 'hindi']\n",
        "valid_data_chai_hindi"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.665822Z",
          "iopub.execute_input": "2021-11-13T19:55:19.666072Z",
          "iopub.status.idle": "2021-11-13T19:55:19.681581Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.666040Z",
          "shell.execute_reply": "2021-11-13T19:55:19.680828Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "oPNTfJwctHHp",
        "outputId": "db57dfb2-ad8f-4148-ab33-c07791a70f81"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          id                                            context  \\\n",
              "0  9aaa1672a  गुरु केलुचरण महापात्र (1926-2004) ने ओड़िसीका ...   \n",
              "2  435396d8e  अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...   \n",
              "5  3acaa3b86  अरस्तु (384 ईपू – 322 ईपू) यूनानी दार्शनिक थे।...   \n",
              "7  de34ee0a0  Main Page\\n\\nआई एन एस (INS) विक्रमादित्य  (San...   \n",
              "8  518fc3aaf  अमेरिकी क्रन्तिकारी युद्ध (1775–1783), जिसे सं...   \n",
              "9  632812604  संयुक्त राष्ट्र संगठन का मुख्यालय [[[अमेरिका]]...   \n",
              "\n",
              "                                            question  \\\n",
              "0           गुरु केलुचरण महापात्र का जन्म कब हुआ था?   \n",
              "2  अग्नि पंचम(५) मिसाइल की परिचालन सीमा कितने किल...   \n",
              "5                        अरस्तु का जन्म कहाँ हुआ था?   \n",
              "7  आई एन एस विक्रमादित्य युद्धपोत किस कंपनी द्वार...   \n",
              "8  कितने अमेरिकी उपनिवेश अमेरिकी क्रांति का हिस्स...   \n",
              "9            संयुक्त राष्ट्र का मुख्यालय कहाँ पर है?   \n",
              "\n",
              "                   answer_text  answer_start language  \n",
              "0                         1926            23    hindi  \n",
              "2              5 हजार किलोमीटर           261    hindi  \n",
              "5                   स्टेगेरिया            97    hindi  \n",
              "7  माइकोलैव ब्लैक ‍सी शिपयार्ड           460    hindi  \n",
              "8                         तेरह           147    hindi  \n",
              "9                    न्युयॉर्क            50    hindi  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f9b8bde4-43dd-4f7f-bb9b-ffde9859a605\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>answer_text</th>\n",
              "      <th>answer_start</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>9aaa1672a</td>\n",
              "      <td>गुरु केलुचरण महापात्र (1926-2004) ने ओड़िसीका ...</td>\n",
              "      <td>गुरु केलुचरण महापात्र का जन्म कब हुआ था?</td>\n",
              "      <td>1926</td>\n",
              "      <td>23</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>435396d8e</td>\n",
              "      <td>अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...</td>\n",
              "      <td>अग्नि पंचम(५) मिसाइल की परिचालन सीमा कितने किल...</td>\n",
              "      <td>5 हजार किलोमीटर</td>\n",
              "      <td>261</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3acaa3b86</td>\n",
              "      <td>अरस्तु (384 ईपू – 322 ईपू) यूनानी दार्शनिक थे।...</td>\n",
              "      <td>अरस्तु का जन्म कहाँ हुआ था?</td>\n",
              "      <td>स्टेगेरिया</td>\n",
              "      <td>97</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>de34ee0a0</td>\n",
              "      <td>Main Page\\n\\nआई एन एस (INS) विक्रमादित्य  (San...</td>\n",
              "      <td>आई एन एस विक्रमादित्य युद्धपोत किस कंपनी द्वार...</td>\n",
              "      <td>माइकोलैव ब्लैक ‍सी शिपयार्ड</td>\n",
              "      <td>460</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>518fc3aaf</td>\n",
              "      <td>अमेरिकी क्रन्तिकारी युद्ध (1775–1783), जिसे सं...</td>\n",
              "      <td>कितने अमेरिकी उपनिवेश अमेरिकी क्रांति का हिस्स...</td>\n",
              "      <td>तेरह</td>\n",
              "      <td>147</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>632812604</td>\n",
              "      <td>संयुक्त राष्ट्र संगठन का मुख्यालय [[[अमेरिका]]...</td>\n",
              "      <td>संयुक्त राष्ट्र का मुख्यालय कहाँ पर है?</td>\n",
              "      <td>न्युयॉर्क</td>\n",
              "      <td>50</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9b8bde4-43dd-4f7f-bb9b-ffde9859a605')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f9b8bde4-43dd-4f7f-bb9b-ffde9859a605 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f9b8bde4-43dd-4f7f-bb9b-ffde9859a605');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_data.head()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.682902Z",
          "iopub.execute_input": "2021-11-13T19:55:19.683149Z",
          "iopub.status.idle": "2021-11-13T19:55:19.735855Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.683118Z",
          "shell.execute_reply": "2021-11-13T19:55:19.734886Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "id": "O3JapNNQtHHp",
        "outputId": "9c860f0c-7206-4f9a-f04e-8cca08b93f8d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          id                                            context  \\\n",
              "0  cd1339bdd  एरीजोना (English: Arizona) संयुक्त राज्य अमेरि...   \n",
              "1  4c38392a6  ஆத்திரேலியா, ஆஸ்திரேலியா அல்லது அவுஸ்திரேலியா ...   \n",
              "2  0d35dc007  अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...   \n",
              "3  5b2018761  मदर टेरेसा (२६ अगस्त १९१० - ५ सितम्बर १९९७) जि...   \n",
              "4  4f99ce2e0  எம். ஜி. ஆர் என்ற பெயரில் புகழ் பெற்ற, மருதூர்...   \n",
              "\n",
              "                                          question     answer_text  \\\n",
              "0                     एरिज़ोना की राजधानी क्या है?         फ़िनक्स   \n",
              "1             அவுஸ்திரேலியா நாட்டின் தலைநகரம் எது?         கான்பரா   \n",
              "2    अग्नि पंचम(५) मिसाइल की लम्बाई कितने मीटर है?              17   \n",
              "3               मदर टेरेसा की राष्ट्रीयता क्या थी?          भारतीय   \n",
              "4  நடிகர் ம. கோ. இராமச்சந்திரன் எப்போது பிறந்தார்?  சனவரி 17, 1917   \n",
              "\n",
              "   answer_start language  \n",
              "0           123    hindi  \n",
              "1          1472    tamil  \n",
              "2           155    hindi  \n",
              "3           328    hindi  \n",
              "4            99    tamil  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ec11df6d-6e72-406f-b751-afeb2939d9c4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>answer_text</th>\n",
              "      <th>answer_start</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>cd1339bdd</td>\n",
              "      <td>एरीजोना (English: Arizona) संयुक्त राज्य अमेरि...</td>\n",
              "      <td>एरिज़ोना की राजधानी क्या है?</td>\n",
              "      <td>फ़िनक्स</td>\n",
              "      <td>123</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4c38392a6</td>\n",
              "      <td>ஆத்திரேலியா, ஆஸ்திரேலியா அல்லது அவுஸ்திரேலியா ...</td>\n",
              "      <td>அவுஸ்திரேலியா நாட்டின் தலைநகரம் எது?</td>\n",
              "      <td>கான்பரா</td>\n",
              "      <td>1472</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0d35dc007</td>\n",
              "      <td>अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...</td>\n",
              "      <td>अग्नि पंचम(५) मिसाइल की लम्बाई कितने मीटर है?</td>\n",
              "      <td>17</td>\n",
              "      <td>155</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5b2018761</td>\n",
              "      <td>मदर टेरेसा (२६ अगस्त १९१० - ५ सितम्बर १९९७) जि...</td>\n",
              "      <td>मदर टेरेसा की राष्ट्रीयता क्या थी?</td>\n",
              "      <td>भारतीय</td>\n",
              "      <td>328</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4f99ce2e0</td>\n",
              "      <td>எம். ஜி. ஆர் என்ற பெயரில் புகழ் பெற்ற, மருதூர்...</td>\n",
              "      <td>நடிகர் ம. கோ. இராமச்சந்திரன் எப்போது பிறந்தார்?</td>\n",
              "      <td>சனவரி 17, 1917</td>\n",
              "      <td>99</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec11df6d-6e72-406f-b751-afeb2939d9c4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ec11df6d-6e72-406f-b751-afeb2939d9c4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ec11df6d-6e72-406f-b751-afeb2939d9c4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_data = train_data.reset_index(drop=True)\n",
        "train_data"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.737698Z",
          "iopub.execute_input": "2021-11-13T19:55:19.737979Z",
          "iopub.status.idle": "2021-11-13T19:55:19.761114Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.737943Z",
          "shell.execute_reply": "2021-11-13T19:55:19.760445Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "DMQ7YKAKtHHp",
        "outputId": "dadd5c3e-e659-4b50-87a9-97ff35639a74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             id                                            context  \\\n",
              "0     cd1339bdd  एरीजोना (English: Arizona) संयुक्त राज्य अमेरि...   \n",
              "1     4c38392a6  ஆத்திரேலியா, ஆஸ்திரேலியா அல்லது அவுஸ்திரேலியா ...   \n",
              "2     0d35dc007  अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...   \n",
              "3     5b2018761  मदर टेरेसा (२६ अगस्त १९१० - ५ सितम्बर १९९७) जि...   \n",
              "4     4f99ce2e0  எம். ஜி. ஆர் என்ற பெயரில் புகழ் பெற்ற, மருதூர்...   \n",
              "...         ...                                                ...   \n",
              "6534        NaN  सिडनी शेल्डन (11 फरवरी,1917 - 30 जनवरी 2007) ए...   \n",
              "6535        NaN  राज्यों को काउंटियों या काउंटी-समकक्ष में विभा...   \n",
              "6536        NaN  89 वें अकादमी पुरस्कार (ऑस्कर 2017) समारोह, मो...   \n",
              "6537        NaN  डीज़ल उत्सर्जन तरल (अंग्रेजी:Diesel exhaust fl...   \n",
              "6538        NaN  गुरुत्वीय तरंगों का संसूचन (detection) आसान नह...   \n",
              "\n",
              "                                               question  \\\n",
              "0                          एरिज़ोना की राजधानी क्या है?   \n",
              "1                  அவுஸ்திரேலியா நாட்டின் தலைநகரம் எது?   \n",
              "2         अग्नि पंचम(५) मिसाइल की लम्बाई कितने मीटर है?   \n",
              "3                    मदर टेरेसा की राष्ट्रीयता क्या थी?   \n",
              "4       நடிகர் ம. கோ. இராமச்சந்திரன் எப்போது பிறந்தார்?   \n",
              "...                                                 ...   \n",
              "6534               सिडनी शेल्डन की राष्ट्रीयता क्या थी?   \n",
              "6535  अतीत में, सार्वजनिक शिक्षा और सार्वजनिक स्वास्...   \n",
              "6536              पुरस्कारों का आयोजन किस दिन किया गया?   \n",
              "6537                        डीईएफ का क्या अर्थ होता है?   \n",
              "6538                      विकृतियाँ कितनी बड़ी होती हैं?   \n",
              "\n",
              "                         answer_text  answer_start language  \n",
              "0                            फ़िनक्स           123    hindi  \n",
              "1                            கான்பரா          1472    tamil  \n",
              "2                                 17           155    hindi  \n",
              "3                             भारतीय           328    hindi  \n",
              "4                     சனவரி 17, 1917            99    tamil  \n",
              "...                              ...           ...      ...  \n",
              "6534                         अमेरिकी            48    hindi  \n",
              "6535                           राज्य           590    hindi  \n",
              "6536                  26 फरवरी, 2017           141    hindi  \n",
              "6537  (अंग्रेजी:Diesel exhaust fluid            19    hindi  \n",
              "6538                           10−21           142    hindi  \n",
              "\n",
              "[6539 rows x 6 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c9f5e073-6f00-4443-a9bc-8336f87fa054\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>answer_text</th>\n",
              "      <th>answer_start</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>cd1339bdd</td>\n",
              "      <td>एरीजोना (English: Arizona) संयुक्त राज्य अमेरि...</td>\n",
              "      <td>एरिज़ोना की राजधानी क्या है?</td>\n",
              "      <td>फ़िनक्स</td>\n",
              "      <td>123</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4c38392a6</td>\n",
              "      <td>ஆத்திரேலியா, ஆஸ்திரேலியா அல்லது அவுஸ்திரேலியா ...</td>\n",
              "      <td>அவுஸ்திரேலியா நாட்டின் தலைநகரம் எது?</td>\n",
              "      <td>கான்பரா</td>\n",
              "      <td>1472</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0d35dc007</td>\n",
              "      <td>अग्नि पंचम (अग्नि-५) भारत की अन्तरमहाद्वीपीय ब...</td>\n",
              "      <td>अग्नि पंचम(५) मिसाइल की लम्बाई कितने मीटर है?</td>\n",
              "      <td>17</td>\n",
              "      <td>155</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5b2018761</td>\n",
              "      <td>मदर टेरेसा (२६ अगस्त १९१० - ५ सितम्बर १९९७) जि...</td>\n",
              "      <td>मदर टेरेसा की राष्ट्रीयता क्या थी?</td>\n",
              "      <td>भारतीय</td>\n",
              "      <td>328</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4f99ce2e0</td>\n",
              "      <td>எம். ஜி. ஆர் என்ற பெயரில் புகழ் பெற்ற, மருதூர்...</td>\n",
              "      <td>நடிகர் ம. கோ. இராமச்சந்திரன் எப்போது பிறந்தார்?</td>\n",
              "      <td>சனவரி 17, 1917</td>\n",
              "      <td>99</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6534</th>\n",
              "      <td>NaN</td>\n",
              "      <td>सिडनी शेल्डन (11 फरवरी,1917 - 30 जनवरी 2007) ए...</td>\n",
              "      <td>सिडनी शेल्डन की राष्ट्रीयता क्या थी?</td>\n",
              "      <td>अमेरिकी</td>\n",
              "      <td>48</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6535</th>\n",
              "      <td>NaN</td>\n",
              "      <td>राज्यों को काउंटियों या काउंटी-समकक्ष में विभा...</td>\n",
              "      <td>अतीत में, सार्वजनिक शिक्षा और सार्वजनिक स्वास्...</td>\n",
              "      <td>राज्य</td>\n",
              "      <td>590</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6536</th>\n",
              "      <td>NaN</td>\n",
              "      <td>89 वें अकादमी पुरस्कार (ऑस्कर 2017) समारोह, मो...</td>\n",
              "      <td>पुरस्कारों का आयोजन किस दिन किया गया?</td>\n",
              "      <td>26 फरवरी, 2017</td>\n",
              "      <td>141</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6537</th>\n",
              "      <td>NaN</td>\n",
              "      <td>डीज़ल उत्सर्जन तरल (अंग्रेजी:Diesel exhaust fl...</td>\n",
              "      <td>डीईएफ का क्या अर्थ होता है?</td>\n",
              "      <td>(अंग्रेजी:Diesel exhaust fluid</td>\n",
              "      <td>19</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6538</th>\n",
              "      <td>NaN</td>\n",
              "      <td>गुरुत्वीय तरंगों का संसूचन (detection) आसान नह...</td>\n",
              "      <td>विकृतियाँ कितनी बड़ी होती हैं?</td>\n",
              "      <td>10−21</td>\n",
              "      <td>142</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6539 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9f5e073-6f00-4443-a9bc-8336f87fa054')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c9f5e073-6f00-4443-a9bc-8336f87fa054 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c9f5e073-6f00-4443-a9bc-8336f87fa054');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# train_data = train_data.sample(frac=1, random_state = random_seed)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.763422Z",
          "iopub.execute_input": "2021-11-13T19:55:19.763906Z",
          "iopub.status.idle": "2021-11-13T19:55:19.767571Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.763867Z",
          "shell.execute_reply": "2021-11-13T19:55:19.766716Z"
        },
        "trusted": true,
        "id": "vXeqt08ItHHp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_dataset = Dataset.from_pandas(train_data)\n",
        "valid_dataset = Dataset.from_pandas(valid_data_chai)\n",
        "train_dataset"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.769109Z",
          "iopub.execute_input": "2021-11-13T19:55:19.769549Z",
          "iopub.status.idle": "2021-11-13T19:55:19.955215Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.769495Z",
          "shell.execute_reply": "2021-11-13T19:55:19.954548Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G9zVRmCZtHHp",
        "outputId": "a5590663-b800-4297-aa48-78b7a20a23a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dataset({\n",
              "    features: ['id', 'context', 'question', 'answer_text', 'answer_start', 'language'],\n",
              "    num_rows: 6539\n",
              "})"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "max_len, encoding_stride = set_max_len_encd_stride(384, 128)\n",
        "print(max_len)\n",
        "print(encoding_stride)\n"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.956483Z",
          "iopub.execute_input": "2021-11-13T19:55:19.956903Z",
          "iopub.status.idle": "2021-11-13T19:55:19.962917Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.956867Z",
          "shell.execute_reply": "2021-11-13T19:55:19.962111Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gpO4Bf8NtHHp",
        "outputId": "5f421e68-56c9-4c4e-ce70-6c09916693b0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "384\n",
            "128\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_encoding = tokenizer(train_dataset['question'], train_dataset['context'],\n",
        "                             truncation = 'only_second', max_length=max_len, stride = encoding_stride, \n",
        "                             return_overflowing_tokens = True, return_offsets_mapping = True,\n",
        "                             padding = 'max_length')\n",
        "valid_encoding = tokenizer(valid_dataset['question'], valid_dataset['context'],\n",
        "                             truncation = 'only_second', max_length=max_len, stride = encoding_stride, \n",
        "                             return_overflowing_tokens = True, return_offsets_mapping = True,\n",
        "                             padding = 'max_length')"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:19.963897Z",
          "iopub.execute_input": "2021-11-13T19:55:19.964083Z",
          "iopub.status.idle": "2021-11-13T19:55:59.816015Z",
          "shell.execute_reply.started": "2021-11-13T19:55:19.964061Z",
          "shell.execute_reply": "2021-11-13T19:55:59.815260Z"
        },
        "trusted": true,
        "id": "CON3mIWqtHHq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "class proc_data():\n",
        "    \n",
        "    def handle_no_answer(self, data_encoding, answer_start, cls_idx):\n",
        "        if len(answer_start) == 0:\n",
        "            data_encoding['start_positions'].append(cls_idx)\n",
        "            data_encoding['end_positions'].append(cls_idx)\n",
        "            return True\n",
        "        return False\n",
        "    \n",
        "    def correct_tokens(self, seq_ids):\n",
        "        seq_ids = list(seq_ids)\n",
        "        answer_token_start_index = seq_ids.index(1)\n",
        "        seq_ids_reverse = seq_ids[::-1]\n",
        "        answer_token_end_index_reverse = seq_ids_reverse.index(1)\n",
        "        answer_token_end_index = len(seq_ids) - 1 - answer_token_end_index_reverse\n",
        "        return answer_token_start_index, answer_token_end_index\n",
        "    \n",
        "    def update_data_encoding(self, data_encoding, start, end):\n",
        "        data_encoding['start_positions'].append(start)\n",
        "        data_encoding['end_positions'].append(end)\n",
        "        \n",
        "    def get_encodings(self, data_encoding, data_sample, tokenizer, offset_mapping, sample_mapping):\n",
        "        for i, offsets in enumerate(offset_mapping):\n",
        "            input_ids = data_encoding['input_ids'][i]\n",
        "            seq_ids = data_encoding.sequence_ids(i)\n",
        "            sample_index = sample_mapping[i]\n",
        "            answer_start = [data_sample['answer_start'][sample_index]]\n",
        "            text = data_sample['answer_text'][sample_index]\n",
        "\n",
        "            no_answer_handled = self.handle_no_answer(data_encoding, answer_start, input_ids.index(tokenizer.cls_token_id))\n",
        "            if not no_answer_handled:\n",
        "                answer_start_char_index = answer_start[0]\n",
        "                answer_end_char_index = answer_start_char_index + len(text)\n",
        "\n",
        "                answer_token_start_index, answer_token_end_index = self.correct_tokens(seq_ids)\n",
        "\n",
        "                if offsets[answer_token_start_index][0] <= answer_start_char_index and offsets[answer_token_end_index][1] >= answer_end_char_index:\n",
        "                    while offsets[answer_token_end_index][1] >= answer_end_char_index:\n",
        "                        answer_token_end_index -=1\n",
        "                    while answer_token_start_index <len(offsets) and offsets[answer_token_start_index][0] <= answer_start_char_index:\n",
        "                        answer_token_start_index +=1\n",
        "                        \n",
        "                    self.update_data_encoding(data_encoding, answer_token_start_index-1, answer_token_end_index+1)\n",
        "                else:\n",
        "                    self.handle_no_answer(data_encoding, [], input_ids.index(tokenizer.cls_token_id)) # [] is just a dummpy,  a 0 element list for the function to work correctly. change this afterwards\n",
        "        return data_encoding, offset_mapping, sample_mapping\n",
        "    \n",
        "    def add_start_end_token_positions(self, data_encoding, data_sample, tokenizer, train = True):\n",
        "        offset_mapping = data_encoding.pop('offset_mapping')\n",
        "        sample_mapping = data_encoding.pop(\"overflow_to_sample_mapping\")\n",
        "        if train:\n",
        "            data_encoding['start_positions'] = []\n",
        "            data_encoding['end_positions'] = []\n",
        "\n",
        "            data_encoding, offset_mapping, sample_mapping = self.get_encodings(data_encoding, data_sample, tokenizer, offset_mapping, sample_mapping)\n",
        "\n",
        "        return data_encoding, offset_mapping, sample_mapping"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:59.817627Z",
          "iopub.execute_input": "2021-11-13T19:55:59.817868Z",
          "iopub.status.idle": "2021-11-13T19:55:59.833148Z",
          "shell.execute_reply.started": "2021-11-13T19:55:59.817836Z",
          "shell.execute_reply": "2021-11-13T19:55:59.832350Z"
        },
        "trusted": true,
        "id": "SoUJYX5gtHHq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "proc_data_obj = proc_data()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:59.834841Z",
          "iopub.execute_input": "2021-11-13T19:55:59.835414Z",
          "iopub.status.idle": "2021-11-13T19:55:59.846600Z",
          "shell.execute_reply.started": "2021-11-13T19:55:59.835375Z",
          "shell.execute_reply": "2021-11-13T19:55:59.845622Z"
        },
        "trusted": true,
        "id": "Cyv6cgaNtHHq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_encd_proc, train_offset_mapping, training_sample_mapping = proc_data_obj.add_start_end_token_positions(train_encoding, train_data, tokenizer, True)\n"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:55:59.849452Z",
          "iopub.execute_input": "2021-11-13T19:55:59.850172Z",
          "iopub.status.idle": "2021-11-13T19:56:01.571790Z",
          "shell.execute_reply.started": "2021-11-13T19:55:59.850132Z",
          "shell.execute_reply": "2021-11-13T19:56:01.571019Z"
        },
        "trusted": true,
        "id": "REicpCHDtHHq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "valid_encd_proc, valid_offset_mapping, valid_sample_mapping = proc_data_obj.add_start_end_token_positions(valid_encoding, valid_data_chai, tokenizer, True)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:01.573110Z",
          "iopub.execute_input": "2021-11-13T19:56:01.573352Z",
          "iopub.status.idle": "2021-11-13T19:56:01.583099Z",
          "shell.execute_reply.started": "2021-11-13T19:56:01.573321Z",
          "shell.execute_reply": "2021-11-13T19:56:01.582451Z"
        },
        "trusted": true,
        "id": "yaOMFi2GtHHq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# valid_encd_proc.keys()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:01.584242Z",
          "iopub.execute_input": "2021-11-13T19:56:01.584755Z",
          "iopub.status.idle": "2021-11-13T19:56:01.594063Z",
          "shell.execute_reply.started": "2021-11-13T19:56:01.584716Z",
          "shell.execute_reply": "2021-11-13T19:56:01.593276Z"
        },
        "trusted": true,
        "id": "EY-2IFjgtHHq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# print(list(train_encd_proc.keys()))\n",
        "# print(train_encd_proc['input_ids'][0])\n",
        "# print(train_encd_proc['input_ids'][1])\n",
        "\n",
        "print(len(train_encd_proc['start_positions']))\n",
        "print(len(train_encd_proc['end_positions']))\n",
        "print(len(train_encd_proc['input_ids']))\n",
        "# print(len(train_encd_proc['attention_masks']))\n"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:01.596938Z",
          "iopub.execute_input": "2021-11-13T19:56:01.597746Z",
          "iopub.status.idle": "2021-11-13T19:56:01.603996Z",
          "shell.execute_reply.started": "2021-11-13T19:56:01.597706Z",
          "shell.execute_reply": "2021-11-13T19:56:01.603319Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rW24-kj1tHHq",
        "outputId": "7d7adbeb-388a-4f9e-b49e-059c2aa6777a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "21727\n",
            "21727\n",
            "21727\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "class ChaiiDataset(torch.utils.data.Dataset):\n",
        "    def __init__(self, encodings):\n",
        "        self.encodings = encodings\n",
        "\n",
        "    def __getitem__(self, idx):\n",
        "        return {key: torch.tensor(val[idx]) for key, val in self.encodings.items()}\n",
        "\n",
        "    def __len__(self):\n",
        "        return len(self.encodings.input_ids)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:01.605203Z",
          "iopub.execute_input": "2021-11-13T19:56:01.605582Z",
          "iopub.status.idle": "2021-11-13T19:56:01.612475Z",
          "shell.execute_reply.started": "2021-11-13T19:56:01.605547Z",
          "shell.execute_reply": "2021-11-13T19:56:01.611693Z"
        },
        "trusted": true,
        "id": "geGM-UCdtHHr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_dataset_ = ChaiiDataset(train_encd_proc)\n",
        "valid_dataset_ = ChaiiDataset(valid_encd_proc)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:01.613971Z",
          "iopub.execute_input": "2021-11-13T19:56:01.614451Z",
          "iopub.status.idle": "2021-11-13T19:56:01.624307Z",
          "shell.execute_reply.started": "2021-11-13T19:56:01.614410Z",
          "shell.execute_reply": "2021-11-13T19:56:01.623597Z"
        },
        "trusted": true,
        "id": "eG73U3CJtHHr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pip install git+https://github.com/huggingface/accelerate"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "78_5YzqcTGd0",
        "outputId": "032c3e57-364e-43b3-8967-3b51aa2871a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting git+https://github.com/huggingface/accelerate\n",
            "  Cloning https://github.com/huggingface/accelerate to /tmp/pip-req-build-ev6kwwxc\n",
            "  Running command git clone --filter=blob:none --quiet https://github.com/huggingface/accelerate /tmp/pip-req-build-ev6kwwxc\n",
            "  Resolved https://github.com/huggingface/accelerate to commit d07fd959cc15afe5ab7d890e52f0a9fa85f3acd0\n",
            "  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from accelerate==0.20.0.dev0) (1.22.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from accelerate==0.20.0.dev0) (23.1)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from accelerate==0.20.0.dev0) (5.9.5)\n",
            "Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from accelerate==0.20.0.dev0) (6.0)\n",
            "Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from accelerate==0.20.0.dev0) (2.0.0+cu118)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate==0.20.0.dev0) (3.12.0)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate==0.20.0.dev0) (4.5.0)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate==0.20.0.dev0) (1.11.1)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate==0.20.0.dev0) (3.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate==0.20.0.dev0) (3.1.2)\n",
            "Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate==0.20.0.dev0) (2.0.0)\n",
            "Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.6.0->accelerate==0.20.0.dev0) (3.25.2)\n",
            "Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.6.0->accelerate==0.20.0.dev0) (16.0.3)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.6.0->accelerate==0.20.0.dev0) (2.1.2)\n",
            "Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.6.0->accelerate==0.20.0.dev0) (1.3.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "toLNNvfKTGLd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_args = TrainingArguments(\n",
        "    output_dir='./results',          \n",
        "    per_device_train_batch_size=4,\n",
        "    per_device_eval_batch_size=4,  \n",
        "    learning_rate = 3e-5, # default 5e-5\n",
        "    gradient_accumulation_steps = 8,\n",
        "    warmup_steps=0.1,\n",
        "    weight_decay=0.01,\n",
        "    num_train_epochs = 1,\n",
        "\n",
        "    # logging_dir='./logs',            \n",
        "#     logging_steps=100,\n",
        "    save_strategy = 'epoch',\n",
        "    evaluation_strategy = 'epoch',\n",
        "#     eval_steps = 100,\n",
        "    save_total_limit = 1,\n",
        "    load_best_model_at_end = True,\n",
        ")"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:01.625908Z",
          "iopub.execute_input": "2021-11-13T19:56:01.626386Z",
          "iopub.status.idle": "2021-11-13T19:56:01.639537Z",
          "shell.execute_reply.started": "2021-11-13T19:56:01.626352Z",
          "shell.execute_reply": "2021-11-13T19:56:01.638659Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 390
        },
        "id": "sMsdecpztHHr",
        "outputId": "2dd2c398-e9f9-401a-d0af-370333a5f720"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-101-1ad46c19fb5a>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m train_args = TrainingArguments(\n\u001b[0m\u001b[1;32m      2\u001b[0m     \u001b[0moutput_dir\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'./results'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mper_device_train_batch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mper_device_eval_batch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mlearning_rate\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m3e-5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;31m# default 5e-5\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/training_args.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, output_dir, overwrite_output_dir, do_train, do_eval, do_predict, evaluation_strategy, prediction_loss_only, per_device_train_batch_size, per_device_eval_batch_size, per_gpu_train_batch_size, per_gpu_eval_batch_size, gradient_accumulation_steps, eval_accumulation_steps, eval_delay, learning_rate, weight_decay, adam_beta1, adam_beta2, adam_epsilon, max_grad_norm, num_train_epochs, max_steps, lr_scheduler_type, warmup_ratio, warmup_steps, log_level, log_level_replica, log_on_each_node, logging_dir, logging_strategy, logging_first_step, logging_steps, logging_nan_inf_filter, save_strategy, save_steps, save_total_limit, save_safetensors, save_on_each_node, no_cuda, use_mps_device, seed, data_seed, jit_mode_eval, use_ipex, bf16, fp16, fp16_opt_level, half_precision_backend, bf16_full_eval, fp16_full_eval, tf32, local_rank, ddp_backend, tpu_num_cores, tpu_metrics_debug, debug, dataloader_drop_last, eval_steps, dataloader_num_workers, past_index, run_name, disable_tqdm, remove_unused_columns, label_names, load_best_model_at_end, metric_for_best_model, greater_is_better, ignore_data_skip, sharded_ddp, fsdp, fsdp_min_num_params, fsdp_config, fsdp_transformer_layer_cls_to_wrap, deepspeed, label_smoothing_factor, optim, optim_args, adafactor, group_by_length, length_column_name, report_to, ddp_find_unused_parameters, ddp_bucket_cap_mb, dataloader_pin_memory, skip_memory_met...\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/training_args.py\u001b[0m in \u001b[0;36m__post_init__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1331\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreport_to\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreport_to\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1333\u001b[0;31m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarmup_ratio\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarmup_ratio\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1334\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"warmup_ratio must lie in range [0,1]\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1335\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarmup_ratio\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarmup_steps\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/training_args.py\u001b[0m in \u001b[0;36mdevice\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1695\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1696\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1697\u001b[0;31m     \u001b[0;32mdef\u001b[0m \u001b[0mn_gpu\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1698\u001b[0m         \"\"\"\n\u001b[1;32m   1699\u001b[0m         \u001b[0mThe\u001b[0m \u001b[0mnumber\u001b[0m \u001b[0mof\u001b[0m \u001b[0mGPUs\u001b[0m \u001b[0mused\u001b[0m \u001b[0mby\u001b[0m \u001b[0mthis\u001b[0m \u001b[0mprocess\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/utils/generic.py\u001b[0m in \u001b[0;36m__get__\u001b[0;34m(self, obj, objtype)\u001b[0m\n\u001b[1;32m     52\u001b[0m         \u001b[0mcached\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcached\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 54\u001b[0;31m             \u001b[0mcached\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     55\u001b[0m             \u001b[0msetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mattr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcached\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcached\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/transformers/training_args.py\u001b[0m in \u001b[0;36m_setup_devices\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1629\u001b[0m             \u001b[0;31m# but deepspeed requires a dist env.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1630\u001b[0m             \u001b[0;31m# env LOCAL_RANK could be set manually by the user, or via init_distributed if mpi4py is installed\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1631\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlocal_rank\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0menviron\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"LOCAL_RANK\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"-1\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1632\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1633\u001b[0m             \u001b[0mdevice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdevice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"cuda\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlocal_rank\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'PartialState' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install --upgrade accelerate"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rvMl8Ob3NRFa",
        "outputId": "796d3a19-1b54-4cb0-a847-5284ba4f86ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: accelerate in /usr/local/lib/python3.10/dist-packages (0.20.0.dev0)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from accelerate) (1.22.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (23.1)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from accelerate) (5.9.5)\n",
            "Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from accelerate) (6.0)\n",
            "Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (2.0.0+cu118)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate) (3.12.0)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate) (4.5.0)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate) (1.11.1)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate) (3.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate) (3.1.2)\n",
            "Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.6.0->accelerate) (2.0.0)\n",
            "Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.6.0->accelerate) (3.25.2)\n",
            "Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.6.0->accelerate) (16.0.3)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.6.0->accelerate) (2.1.2)\n",
            "Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.6.0->accelerate) (1.3.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "trainer = Trainer(\n",
        "    model=model,                         \n",
        "    args=train_args,                  \n",
        "    train_dataset=train_dataset_,         \n",
        "    eval_dataset=valid_dataset_,\n",
        "    data_collator = default_data_collator\n",
        ")"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:01.641812Z",
          "iopub.execute_input": "2021-11-13T19:56:01.642475Z",
          "iopub.status.idle": "2021-11-13T19:56:09.209815Z",
          "shell.execute_reply.started": "2021-11-13T19:56:01.642439Z",
          "shell.execute_reply": "2021-11-13T19:56:09.209050Z"
        },
        "trusted": true,
        "id": "iRa6oVxRtHHr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "outputId": "1835af8e-0f19-4383-d890-86566f9a2d1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-91-dd1a9e1a30da>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m trainer = Trainer(\n\u001b[1;32m      2\u001b[0m     \u001b[0mmodel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0margs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrain_args\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0mtrain_dataset\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrain_dataset_\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0meval_dataset\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvalid_dataset_\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'train_args' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "trainer.train()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T19:56:09.211053Z",
          "iopub.execute_input": "2021-11-13T19:56:09.211326Z",
          "iopub.status.idle": "2021-11-13T20:12:50.836471Z",
          "shell.execute_reply.started": "2021-11-13T19:56:09.211294Z",
          "shell.execute_reply": "2021-11-13T20:12:50.835813Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 169
        },
        "id": "JDDIVQXttHHr",
        "outputId": "3214c76b-5fc3-4122-b8ea-9fb37c7219eb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-92-3435b262f1ae>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrainer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'trainer' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Start"
      ],
      "metadata": {
        "id": "RlIcVeSJtHHr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "test_data =  pd.read_csv(\"/content/drive/MyDrive/nlp project/chaii-hindi-and-tamil-question-answering/test.csv\", encoding = \"utf-8\")\n",
        "# test_data['context'] = test_data['context'].apply(lambda x: x.lstrip())\n",
        "test_data['question'] = test_data['question'].apply(lambda x: x.lstrip())\n",
        "\n",
        "test_dataset = Dataset.from_pandas(test_data)\n",
        "\n",
        "test_encoding = tokenizer(test_dataset['question'], test_dataset['context'],\n",
        "                             truncation = 'only_second', max_length=max_len, stride = encoding_stride, \n",
        "                             return_overflowing_tokens = True, return_offsets_mapping = True,\n",
        "                             padding = 'max_length')\n",
        "\n",
        "test_encd_proc, test_offset_mapping,test_sample_mapping = proc_data_obj.add_start_end_token_positions(test_encoding, test_data, tokenizer, False)\n",
        "test_dataset_encd = ChaiiDataset(test_encd_proc)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:50.837924Z",
          "iopub.execute_input": "2021-11-13T20:12:50.838172Z",
          "iopub.status.idle": "2021-11-13T20:12:51.080952Z",
          "shell.execute_reply.started": "2021-11-13T20:12:50.838138Z",
          "shell.execute_reply": "2021-11-13T20:12:51.080228Z"
        },
        "trusted": true,
        "id": "au-5yvw6tHHr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "test_data"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:51.082272Z",
          "iopub.execute_input": "2021-11-13T20:12:51.082527Z",
          "iopub.status.idle": "2021-11-13T20:12:51.095276Z",
          "shell.execute_reply.started": "2021-11-13T20:12:51.082480Z",
          "shell.execute_reply": "2021-11-13T20:12:51.094529Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "rji5aUkstHHr",
        "outputId": "2c69c791-27bc-40ed-d647-7face4532ce2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          id                                            context  \\\n",
              "0  22bff3dec  ज्वाला गुट्टा (जन्म: 7 सितंबर 1983; वर्धा, महा...   \n",
              "1  282758170  गूगल मानचित्र (Google Maps) (पूर्व में गूगल लो...   \n",
              "2  d60987e0e  गुस्ताव रॉबर्ट किरचॉफ़ (१२ मार्च १८२४ - १७ अक्...   \n",
              "3  f99c770dc  அலுமினியம் (ஆங்கிலம்: அலுமினியம்; வட அமெரிக்க ...   \n",
              "4  40dec1964  கூட்டுறவு இயக்க வரலாறு, இங்கிலாந்து  நாட்டில் ...   \n",
              "\n",
              "                                            question language  \n",
              "0                ज्वाला गुट्टा की माँ का नाम क्या है    hindi  \n",
              "1                   गूगल मैप्स कब लॉन्च किया गया था?    hindi  \n",
              "2                  गुस्ताव किरचॉफ का जन्म कब हुआ था?    hindi  \n",
              "3                       அலுமினியத்தின் அணு எண் என்ன?    tamil  \n",
              "4  இந்தியாவில் பசுமை புரட்சியின் தந்தை என்று கருத...    tamil  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-747120a0-4321-4552-bbd6-4aae95ed7a5e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>context</th>\n",
              "      <th>question</th>\n",
              "      <th>language</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22bff3dec</td>\n",
              "      <td>ज्वाला गुट्टा (जन्म: 7 सितंबर 1983; वर्धा, महा...</td>\n",
              "      <td>ज्वाला गुट्टा की माँ का नाम क्या है</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>282758170</td>\n",
              "      <td>गूगल मानचित्र (Google Maps) (पूर्व में गूगल लो...</td>\n",
              "      <td>गूगल मैप्स कब लॉन्च किया गया था?</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>d60987e0e</td>\n",
              "      <td>गुस्ताव रॉबर्ट किरचॉफ़ (१२ मार्च १८२४ - १७ अक्...</td>\n",
              "      <td>गुस्ताव किरचॉफ का जन्म कब हुआ था?</td>\n",
              "      <td>hindi</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>f99c770dc</td>\n",
              "      <td>அலுமினியம் (ஆங்கிலம்: அலுமினியம்; வட அமெரிக்க ...</td>\n",
              "      <td>அலுமினியத்தின் அணு எண் என்ன?</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>40dec1964</td>\n",
              "      <td>கூட்டுறவு இயக்க வரலாறு, இங்கிலாந்து  நாட்டில் ...</td>\n",
              "      <td>இந்தியாவில் பசுமை புரட்சியின் தந்தை என்று கருத...</td>\n",
              "      <td>tamil</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-747120a0-4321-4552-bbd6-4aae95ed7a5e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-747120a0-4321-4552-bbd6-4aae95ed7a5e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-747120a0-4321-4552-bbd6-4aae95ed7a5e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_encd_proc.keys()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:51.096549Z",
          "iopub.execute_input": "2021-11-13T20:12:51.096933Z",
          "iopub.status.idle": "2021-11-13T20:12:51.103622Z",
          "shell.execute_reply.started": "2021-11-13T20:12:51.096898Z",
          "shell.execute_reply": "2021-11-13T20:12:51.102771Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z7oABpTqtHHs",
        "outputId": "0d8afb6a-2686-4d98-bcc0-97ee366da09d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['input_ids', 'attention_mask'])"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_encoding.keys()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:51.105146Z",
          "iopub.execute_input": "2021-11-13T20:12:51.105450Z",
          "iopub.status.idle": "2021-11-13T20:12:51.112636Z",
          "shell.execute_reply.started": "2021-11-13T20:12:51.105416Z",
          "shell.execute_reply": "2021-11-13T20:12:51.111699Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9vd1z52dtHHs",
        "outputId": "0d1489f7-3f1e-4f5c-9d64-0995f697f495"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['input_ids', 'attention_mask'])"
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "predictions = trainer.predict(test_dataset_encd)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:51.114174Z",
          "iopub.execute_input": "2021-11-13T20:12:51.114430Z",
          "iopub.status.idle": "2021-11-13T20:12:53.108289Z",
          "shell.execute_reply.started": "2021-11-13T20:12:51.114398Z",
          "shell.execute_reply": "2021-11-13T20:12:53.107558Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 169
        },
        "id": "ff-MbqCdtHHs",
        "outputId": "72eecb74-651d-4217-8a30-5f3d71b4ed8c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-100-1a5faf632c53>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpredictions\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrainer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_dataset_encd\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'trainer' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Validset prediction"
      ],
      "metadata": {
        "id": "USbBoAI2tHHs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "valid_encoding_ = tokenizer(valid_dataset['question'], valid_dataset['context'],\n",
        "                             truncation = 'only_second', max_length=max_len, stride = encoding_stride, \n",
        "                             return_overflowing_tokens = True, return_offsets_mapping = True,\n",
        "                             padding = 'max_length')"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:53.109542Z",
          "iopub.execute_input": "2021-11-13T20:12:53.109795Z",
          "iopub.status.idle": "2021-11-13T20:12:53.312768Z",
          "shell.execute_reply.started": "2021-11-13T20:12:53.109764Z",
          "shell.execute_reply": "2021-11-13T20:12:53.311961Z"
        },
        "trusted": true,
        "id": "KeEaJFO-tHHs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "valid_encoding_.keys()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:53.313934Z",
          "iopub.execute_input": "2021-11-13T20:12:53.314215Z",
          "iopub.status.idle": "2021-11-13T20:12:54.697277Z",
          "shell.execute_reply.started": "2021-11-13T20:12:53.314178Z",
          "shell.execute_reply": "2021-11-13T20:12:54.696458Z"
        },
        "trusted": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_xvBa--qtHHs",
        "outputId": "ee9261d5-1903-4646-a487-70502bdcabff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['input_ids', 'attention_mask', 'offset_mapping', 'overflow_to_sample_mapping'])"
            ]
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "valid_encd_proc_, valid_offset_mapping_,valid_sample_mapping_ = proc_data_obj.add_start_end_token_positions(valid_encoding_, valid_dataset, tokenizer, False)\n",
        "# valid_encd_proc_.pop('id')\n",
        "valid_dataset_encd = ChaiiDataset(valid_encd_proc_)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:54.703221Z",
          "iopub.execute_input": "2021-11-13T20:12:54.703429Z",
          "iopub.status.idle": "2021-11-13T20:12:54.707799Z",
          "shell.execute_reply.started": "2021-11-13T20:12:54.703406Z",
          "shell.execute_reply": "2021-11-13T20:12:54.706891Z"
        },
        "trusted": true,
        "id": "6otysNxmtHHs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "valid_encoding_.keys()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:54.709308Z",
          "iopub.execute_input": "2021-11-13T20:12:54.709857Z",
          "iopub.status.idle": "2021-11-13T20:12:54.718526Z",
          "shell.execute_reply.started": "2021-11-13T20:12:54.709818Z",
          "shell.execute_reply": "2021-11-13T20:12:54.717573Z"
        },
        "trusted": true,
        "id": "ii5kS11BtHHs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "valid_predictions = trainer.predict(valid_dataset_encd)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:54.719995Z",
          "iopub.execute_input": "2021-11-13T20:12:54.720310Z",
          "iopub.status.idle": "2021-11-13T20:12:57.283251Z",
          "shell.execute_reply.started": "2021-11-13T20:12:54.720259Z",
          "shell.execute_reply": "2021-11-13T20:12:57.282416Z"
        },
        "trusted": true,
        "id": "L8KE0dkItHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# commented code dekh lena.\n",
        "def get_default_corr_ans_dict():\n",
        "    return {\"text\": \"\", \"score\": 0.0}\n",
        "\n",
        "def get_logits_mapping(start_logits, end_logits, offset_mapping, index, check_best):\n",
        "    start_logit, end_logit, offsets = np.argsort(start_logits[index]), np.argsort(end_logits[index]), offset_mapping[index]\n",
        "    \n",
        "    return start_logit[-1 : -check_best - 1 : -1].tolist(), end_logit[-1 : -check_best - 1 : -1].tolist(), offsets, start_logits[index], end_logits[index]\n",
        "\n",
        "def post_processing(data, data_encoding, st_logits, en_logits , sample_mapping, offset_mapping, answer_length_limit = 30, check_best = 20):\n",
        "    start_logits = st_logits\n",
        "    end_logits = en_logits\n",
        "    mapping_data_index_sample = collections.defaultdict(list) # of the form [[1,2,3,4,], [5,6,7,8]]        \n",
        "    for sample_idx, data_idx in enumerate(sample_mapping):\n",
        "        mapping_data_index_sample[data_idx].append(sample_idx)\n",
        "    \n",
        "    predicted_answers = collections.OrderedDict()\n",
        "    for data_index, data_point in enumerate(data):\n",
        "        encoding_idxs = mapping_data_index_sample[data_index]\n",
        "        context = data_point['context']\n",
        "        answers = {}\n",
        "        for index in encoding_idxs:\n",
        "            assert True\n",
        "            selected_start_logits_index, selected_end_logits_index, offsets, start_logit, end_logit = get_logits_mapping(start_logits, end_logits, offset_mapping, index, check_best)\n",
        "            \n",
        "            seq_ids = data_encoding.sequence_ids(index)\n",
        "            for start in selected_start_logits_index:\n",
        "                if(start >= len(offsets) or seq_ids[start] != 1):\n",
        "                    continue\n",
        "                for end in selected_end_logits_index:\n",
        "                    if(end >= len(offsets) or seq_ids[end]!= 1 or end < start or (end-start) + 1> answer_length_limit):\n",
        "                        continue\n",
        "                    key = start_logit[start] + end_logit[end]\n",
        "                    answers[key] = context[offsets[start][0]: offsets[end][1]]\n",
        "                    \n",
        "        scores = list(answers.keys())\n",
        "        if len(scores) > 0:\n",
        "            sorted_scores = sorted(scores)\n",
        "            best_score = sorted_scores[-1]\n",
        "            best_answer = answers[best_score]\n",
        "\n",
        "        else:\n",
        "            best_answer = \"\"\n",
        "\n",
        "        predicted_answers[data_point[\"id\"]] = best_answer\n",
        "        \n",
        "    return predicted_answers"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.286213Z",
          "iopub.execute_input": "2021-11-13T20:12:57.286618Z",
          "iopub.status.idle": "2021-11-13T20:12:57.299323Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.286583Z",
          "shell.execute_reply": "2021-11-13T20:12:57.298674Z"
        },
        "trusted": true,
        "id": "1218F7fJtHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "final_predictions_valid = post_processing(valid_dataset, valid_encoding_, valid_predictions.predictions[0], valid_predictions.predictions[1], valid_sample_mapping_, valid_offset_mapping_)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.300514Z",
          "iopub.execute_input": "2021-11-13T20:12:57.301359Z",
          "iopub.status.idle": "2021-11-13T20:12:57.342758Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.301321Z",
          "shell.execute_reply": "2021-11-13T20:12:57.342165Z"
        },
        "trusted": true,
        "id": "RylkdFhbtHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "valid_dataset"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.344234Z",
          "iopub.execute_input": "2021-11-13T20:12:57.344703Z",
          "iopub.status.idle": "2021-11-13T20:12:57.350149Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.344669Z",
          "shell.execute_reply": "2021-11-13T20:12:57.349437Z"
        },
        "trusted": true,
        "id": "wF0F-_zVtHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "T2e9wxAgtHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "sDPFPdvOtHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Evaluation"
      ],
      "metadata": {
        "id": "idBOBCH6tHHt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "final_predictions = post_processing(test_dataset, test_encoding, predictions.predictions[0], predictions.predictions[1], test_sample_mapping, test_offset_mapping)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.351296Z",
          "iopub.execute_input": "2021-11-13T20:12:57.351811Z",
          "iopub.status.idle": "2021-11-13T20:12:57.377854Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.351773Z",
          "shell.execute_reply": "2021-11-13T20:12:57.377252Z"
        },
        "trusted": true,
        "id": "trE6Q2o1tHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "key = final_predictions.keys()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.379125Z",
          "iopub.execute_input": "2021-11-13T20:12:57.379361Z",
          "iopub.status.idle": "2021-11-13T20:12:57.382919Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.379330Z",
          "shell.execute_reply": "2021-11-13T20:12:57.382108Z"
        },
        "trusted": true,
        "id": "jiHPbzuDtHHt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for k in key:\n",
        "    print((k, final_predictions[k]))"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.384382Z",
          "iopub.execute_input": "2021-11-13T20:12:57.384742Z",
          "iopub.status.idle": "2021-11-13T20:12:57.393226Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.384710Z",
          "shell.execute_reply": "2021-11-13T20:12:57.392400Z"
        },
        "trusted": true,
        "id": "lpdWR8LetHHu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sample = pd.read_csv('/content/drive/MyDrive/nlp project/chaii-hindi-and-tamil-question-answering/sample_submission.csv')\n",
        "sample.columns"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.394345Z",
          "iopub.execute_input": "2021-11-13T20:12:57.394699Z",
          "iopub.status.idle": "2021-11-13T20:12:57.411874Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.394664Z",
          "shell.execute_reply": "2021-11-13T20:12:57.411256Z"
        },
        "trusted": true,
        "id": "Em_TAwVztHHu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "submission = [[str(k), str(final_predictions[k])] for k in key]\n",
        "with open(\"submission.csv\", \"w\") as f:\n",
        "    writer = csv.writer(f)\n",
        "    writer.writerows(submission)\n",
        "\n",
        "sub_df = pd.read_csv('submission.csv', header = None)\n",
        "sub_df = sub_df.rename(columns={0: 'id', 1: 'PredictionString'})\n",
        "print(sub_df)\n",
        "sub_df.to_csv('submission.csv', index=None)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.413071Z",
          "iopub.execute_input": "2021-11-13T20:12:57.413316Z",
          "iopub.status.idle": "2021-11-13T20:12:57.431330Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.413286Z",
          "shell.execute_reply": "2021-11-13T20:12:57.430661Z"
        },
        "trusted": true,
        "id": "PHjgCOcGtHHu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!cat submission.csv"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2021-11-13T20:12:57.432526Z",
          "iopub.execute_input": "2021-11-13T20:12:57.432945Z",
          "iopub.status.idle": "2021-11-13T20:12:58.393774Z",
          "shell.execute_reply.started": "2021-11-13T20:12:57.432913Z",
          "shell.execute_reply": "2021-11-13T20:12:58.392472Z"
        },
        "trusted": true,
        "id": "4nMM3biYtHHu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Evaluation metrics"
      ],
      "metadata": {
        "id": "sEVRAKuEtHHu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def jaccard(row): \n",
        "    str1 = row[0]\n",
        "    str2 = row[1]\n",
        "    a = set(str1.lower().split()) \n",
        "    b = set(str2.lower().split())\n",
        "    c = a.intersection(b)\n",
        "    return float(len(c)) / (len(a) + len(b) - len(c))"
      ],
      "metadata": {
        "id": "oD0v-WeAN0SX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "references = [{\"id\": ex[\"id\"], \"answer\": ex[\"answers\"]['text'][0]} for ex in valid_dataset]"
      ],
      "metadata": {
        "id": "ZCyRhztAN8Es"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "res = pd.DataFrame(references)\n",
        "res['prediction'] = res['id'].apply(lambda r: final_predictions[r])\n",
        "res['jaccard'] = res[['answer', 'prediction']].apply(jaccard, axis=1)\n",
        "res"
      ],
      "metadata": {
        "id": "Oe68tUAPODt_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### F1 score"
      ],
      "metadata": {
        "id": "_XPQTbZxO_PK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "def f1_score(predictions, labels):\n",
        "    tp = 0  # True positive\n",
        "    fp = 0  # False positive\n",
        "    fn = 0  # False negative\n",
        "\n",
        "    for pred, label in zip(predictions, labels):\n",
        "        pred_tokens = set(pred.lower().split())\n",
        "        label_tokens = set(label.lower().split())\n",
        "\n",
        "        tp += len(pred_tokens.intersection(label_tokens))\n",
        "        fp += len(pred_tokens - label_tokens)\n",
        "        fn += len(label_tokens - pred_tokens)\n",
        "\n",
        "    precision = tp / (tp + fp) if (tp + fp) > 0 else 0.0\n",
        "    recall = tp / (tp + fn) if (tp + fn) > 0 else 0.0\n",
        "    f1 = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0.0\n",
        "\n",
        "    return f1\n",
        "\n"
      ],
      "metadata": {
        "id": "rUxhBOiZPCTf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Example usage\n",
        "predictions = [\"I love cats\", \"The sky is blue\"]\n",
        "labels = [\"I love dogs\", \"The sun is shining\"]\n",
        "f1 = f1_score(predictions, labels)\n",
        "print(f\"F1 score: {f1}\")"
      ],
      "metadata": {
        "id": "Ykj7G0T8PEn7"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
